{"version":3,"file":"static/js/random-picker-router.2784ff47.chunk.js","mappings":"qNAOMA,GAAmBC,EAAAA,EAAAA,OAAK,kBAC1B,qDAGEC,MAAK,SAACC,GAAD,MAAa,CAAEC,QAASD,EAAOH,wBAGpCK,GAAmBJ,EAAAA,EAAAA,OAAK,kBAC1B,8BAGEC,MAAK,SAACC,GAAD,MAAa,CAAEC,QAASD,EAAOG,oBAG7BC,EAAwC,WACjD,OACI,SAAC,EAAAC,SAAD,WACI,UAAC,KAAD,YAEI,SAAC,KAAD,CAAOC,OAAK,EAACC,KAAMC,EAAAA,EAAAA,KAAnB,UAEI,SAAC,KAAD,CAAUC,GAAID,EAAAA,EAAAA,mBAIlB,SAAC,KAAD,CACIF,OAAK,EACLI,UAAWb,EACXU,KAAMC,EAAAA,EAAAA,iBAIV,SAAC,KAAD,CAAOE,UAAWR","sources":["routers/random-picker/random-picker.router.tsx"],"sourcesContent":["\nimport React, { FunctionComponent, lazy, Suspense } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport {\n    AppRoute,\n} from \"../../utils/routes/routes.util\";\n\nconst RandomPickerPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"random-picker-page\" */\n        \"../../pages/random-picker/random-picker\"\n    ).then((module) => ({ default: module.RandomPickerPage }))\n);\n\nconst PageNotFoundPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"page-not-found-page\" */\n        \"../../pages/page-not-found/page-not-found\"\n    ).then((module) => ({ default: module.PageNotFound }))\n);\n\nexport const RandomPickerRouter: FunctionComponent = () => {\n    return (\n        <Suspense>\n            <Switch>\n                {/* Random picker path */}\n                <Route exact path={AppRoute.BASE}>\n                    {/* Redirect to random picker path */}\n                    <Redirect to={AppRoute.RANDOM_PICKER} />\n                </Route>\n\n                {/* Random picker path */}\n                <Route\n                    exact\n                    component={RandomPickerPage}\n                    path={AppRoute.RANDOM_PICKER}\n                />\n\n                {/* No match found, render page not found */}\n                <Route component={PageNotFoundPage} />\n            </Switch>\n        </Suspense>\n    );\n};\n"],"names":["RandomPickerPage","lazy","then","module","default","PageNotFoundPage","PageNotFound","RandomPickerRouter","Suspense","exact","path","AppRoute","to","component"],"sourceRoot":""}